#!/bin/sh
prefix='/mnt/stateful_partition/nix'

self_update(){
    h2="$(wget https://raw.githubusercontent.com/viniciuscr/chromeos-nix/master/nix-init >/dev/null 2>&1 | sha512sum | cut -c1-128)"
    h1="$(sha512sum /usr/local/bin/nix-init | cut -c1-128)"
    if [ -z "${h2}" ]; then
        if [ "${h1}" != "${h2}" ]; then
            printf "New version! Stealth Updating it!\n"
            rm $HOME/Downloads/nix-init
            wget -P $HOME/Downloads/ https://raw.githubusercontent.com/viniciuscr/chromeos-nix/master/nix-init
            cd $HOME/Downloads/
            chmod +x nix-init
            cp nix-init /usr/local/bin/
            echo "Done!"
        fi
    fi
    
}

self_update

sudo mount -o remount,exec /tmp
sudo mount -i -o "remount,exec" /mnt/stateful_partition


if [ -x "$prefix/proot-$(uname -m)" ] && [ -h ~/.nix-profile ]; then
  printf "Nix is ready to roll out!\n"
  LANG="C"
  LANGUAGE="C"
  LC_ALL="C"
  export LANG
  export LANGUAGE
  export LC_ALL
  exec "$prefix/proot-$(uname -m)" -b "$prefix:/nix" bash --init-file $HOME/.nix-profile/etc/profile.d/nix.sh
fi


oops() {
    echo "$0:" "$@" >&2
    exit 1
}


create_env(){
   
    printf "First, let's create the nix's directory: $prefix\n---\n"
    sudo mkdir -p "$prefix"
    if [ ! -x "$prefix" ]; then
        oops "Can't create root directory"
    fi
        
    printf "Now, we set the nix's owner to our friend chronos, so that we don't have to ask for root's permission all the time.\n---\n"
    sudo chown chronos:chronos "$prefix"
    cd $prefix
}

download_nix(){
    printf "Ok, next step is to download nix's binaries.\n"
    case "$(uname -s).$(uname -m)" in
        Linux.x86_64) system=x86_64-linux; hash=ede13ec7db7c2c8228cbdab48586f8abd3d43a8e642c7a3646ae92ad9e2cede1;;
        Linux.i?86) system=i686-linux; hash=b20231f3e5fde02cd03cbeed31831e7beceb2698fc6d08a2eb2431cfe3efea99;;
        Darwin.x86_64) system=x86_64-darwin; hash=7c5f540358cb9cf5885d049e1723df7a66997609d71ce262e01a3ec8e531a7f3;;
        *) oops "sorry, there is no binary distribution of Nix for your platform";
    esac

    version="nix-1.11.7"
    url="https://nixos.org/releases/nix/$version/$version-$system.tar.bz2"
    
    if [ ! -f $HOME/Downloads/$version-$system.tar.bz2 ]; then
        wget -P $HOME/Downloads/ $url
    fi

    printf "Done!\n---\n"
}

check_hash(){
    printf "Just checking the hash\n"
    hash2="$(sha256sum  ~/Downloads/$version-$system.tar.bz2 | cut -c1-64)"
    
    if [ "${hash}" != "${hash2}" ]; then
        rm ~/Downloads/$version-$system.tar.bz2
        oops "SHA-256 hash mismatch in '$url'; expected $hash, got $hash2"
    fi
    
    printf "Everything looks just fine.\n---\n"

}

setup_proot(){
    printf "Good, now we are going to download this amazing magic guy called proot\n---\n"
    if [ ! -f "$HOME/Downloads/proot-$(uname -m)" ]; then
        wget -P $HOME/Downloads/ "https://github.com/proot-me/proot-static-build/raw/master/static/proot-$(uname -m)"
    fi
    cp "$HOME/Downloads/proot-$(uname -m)" .
    chmod u+x "proot-$(uname -m)"
}

create_env

download_nix

check_hash

printf "Extracting nix..."
tar -C "$prefix" --transform='s|^nix-[^/]*|nix|' -xf $HOME/Downloads/$version-$system.tar.bz2
printf "\n---\n"

setup_proot


GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m' # No Color

printf "Finally, Running install script!\n---\n"
echo "Lots of evil things rolling out on the backstage..."
nohup $prefix/proot-$(uname -m) -b $prefix:/nix bash ./nix/install 2> /dev/null
printf "\n\n\n\n${YELLOW}Wait for it...${NC}\n\n"
printf "\n---\nInstallation ${GREEN}successful${NC}.\n\n"
echo "Type down ${BLUE}nix-init${NC} and enjoy it ;)\n"
